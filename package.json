{
	"name": "vscode-elrond-ide",
	"displayName": "MultiversX IDE",
	"description": "MultiversX IDE for developing Smart Contracts",
	"version": "0.21.0",
	"publisher": "Elrond",
	"repository": {
		"type": "git",
		"url": "https://github.com/multiversx/mx-ide-vscode.git"
	},
	"engines": {
		"vscode": "^1.76.2"
	},
	"categories": [
		"Programming Languages",
		"Extension Packs",
		"Debuggers",
		"Other"
	],
	"icon": "content/logo.png",
	"activationEvents": [
		"onStartupFinished"
	],
	"main": "./dist/extension.js",
	"contributes": {
		"commands": [
			{
				"command": "multiversx.setupWorkspace",
				"title": "Setup Workspace",
				"category": "multiversx"
			},
			{
				"command": "multiversx.installSdk",
				"title": "Install mxpy",
				"category": "multiversx"
			},
			{
				"command": "multiversx.installSdkModule",
				"title": "Install Module or Dependency",
				"category": "multiversx"
			},
			{
				"command": "multiversx.installRustDebuggerPrettyPrinterScript",
				"title": "Install the rust debugger pretty printer script",
				"category": "multiversx"
			},
			{
				"command": "multiversx.refreshTemplates",
				"title": "Refresh",
				"category": "multiversx",
				"icon": {
					"light": "content/light/refresh.svg",
					"dark": "content/dark/refresh.svg"
				}
			},
			{
				"command": "multiversx.newFromTemplate",
				"title": "New Contract",
				"category": "multiversx"
			},
			{
				"command": "multiversx.refreshContracts",
				"title": "Refresh",
				"category": "multiversx",
				"icon": {
					"light": "content/light/refresh.svg",
					"dark": "content/dark/refresh.svg"
				}
			},
			{
				"command": "multiversx.buildContract",
				"title": "Build Contract",
				"category": "multiversx"
			},
			{
				"command": "multiversx.cleanContract",
				"title": "Clean Contract",
				"category": "multiversx"
			},
			{
				"command": "multiversx.runScenarios",
				"title": "Run Scenarios",
				"category": "multiversx"
			},
			{
				"command": "multiversx.gotoContract",
				"title": "Show in Workspace Explorer",
				"category": "multiversx"
			},
			{
				"command": "multiversx.runFreshLocalnet",
				"title": "Start Fresh Localnet",
				"category": "multiversx"
			},
			{
				"command": "multiversx.resumeExistingLocalnet",
				"title": "Resume Localnet",
				"category": "multiversx"
			},
			{
				"command": "multiversx.stopLocalnet",
				"title": "Stop Localnet",
				"category": "multiversx"
			}
		],
		"menus": {
			"explorer/context": [
				{
					"command": "multiversx.buildContract",
					"when": "explorerResourceIsFolder && resourceFilename != output && resourceFilename != debug && resourceFilename != target && resourceFilename != js-snippets && resourceFilename != interaction",
					"group": "multiversx"
				},
				{
					"command": "multiversx.buildContract",
					"when": "resourceFilename == multiversx.json",
					"group": "multiversx"
				},
				{
					"command": "multiversx.cleanContract",
					"when": "explorerResourceIsFolder && resourceFilename != output && resourceFilename != debug && resourceFilename != target && resourceFilename != js-snippets && resourceFilename != interaction",
					"group": "multiversx"
				},
				{
					"command": "multiversx.cleanContract",
					"when": "resourceFilename == multiversx.json",
					"group": "multiversx"
				},
				{
					"command": "multiversx.runScenarios",
					"when": "resourceFilename =~ /.scen.json/",
					"group": "multiversx"
				},
				{
					"command": "multiversx.runScenarios",
					"when": "explorerResourceIsFolder && resourceFilename != output && resourceFilename != debug && resourceFilename != target && resourceFilename != js-snippets && resourceFilename != interaction",
					"group": "multiversx"
				},
				{
					"command": "multiversx.runFreshLocalnet",
					"when": "resourceFilename == localnet.toml",
					"group": "multiversx Localnet"
				},
				{
					"command": "multiversx.resumeExistingLocalnet",
					"when": "resourceFilename == localnet.toml",
					"group": "multiversx Localnet"
				},
				{
					"command": "multiversx.stopLocalnet",
					"when": "resourceFilename == localnet.toml",
					"group": "multiversx Localnet"
				}
			],
			"commandPalette": [
				{
					"command": "multiversx.refreshContracts",
					"when": "false"
				},
				{
					"command": "multiversx.refreshTemplates",
					"when": "false"
				},
				{
					"command": "multiversx.newFromTemplate",
					"when": "false"
				},
				{
					"command": "multiversx.buildContract",
					"when": "false"
				},
				{
					"command": "multiversx.cleanContract",
					"when": "false"
				},
				{
					"command": "multiversx.runScenarios",
					"when": "false"
				},
				{
					"command": "multiversx.gotoContract",
					"when": "false"
				},
				{
					"command": "multiversx.runFreshLocalnet",
					"when": "false"
				},
				{
					"command": "multiversx.resumeExistingLocalnet",
					"when": "false"
				},
				{
					"command": "multiversx.stopLocalnet",
					"when": "false"
				}
			],
			"editor/context": [],
			"view/title": [
				{
					"command": "multiversx.refreshTemplates",
					"when": "view == contractTemplates",
					"group": "navigation"
				},
				{
					"command": "multiversx.refreshContracts",
					"when": "view == smartContracts",
					"group": "navigation"
				}
			],
			"view/item/context": [
				{
					"command": "multiversx.buildContract",
					"when": "view == smartContracts && viewItem == contract"
				},
				{
					"command": "multiversx.cleanContract",
					"when": "view == smartContracts && viewItem == contract"
				},
				{
					"command": "multiversx.runScenarios",
					"when": "view == smartContracts && viewItem == contract"
				},
				{
					"command": "multiversx.gotoContract",
					"when": "view == smartContracts && viewItem == contract"
				},
				{
					"command": "multiversx.newFromTemplate",
					"when": "view == contractTemplates",
					"group": "inline"
				}
			]
		},
		"configuration": {
			"title": "vscode-elrond-ide",
			"properties": {
				"multiversx.sdkPath": {
					"type": "string",
					"default": "~/multiversx-sdk"
				}
			}
		},
		"viewsContainers": {
			"activitybar": [
				{
					"id": "multiversx",
					"title": "MultiversX",
					"icon": "content/logo-monochrome.png"
				}
			]
		},
		"views": {
			"multiversx": [
				{
					"id": "smartContracts",
					"name": "Smart Contracts",
					"contextualTitle": "Smart Contracts in Workspace"
				},
				{
					"id": "contractTemplates",
					"name": "Templates",
					"contextualTitle": "Smart Contract Templates"
				}
			]
		},
		"viewsWelcome": [
			{
				"view": "contractTemplates",
				"contents": "Hit the refresh button to fetch or update the available Smart Contract templates."
			},
			{
				"view": "smartContracts",
				"contents": "Hit the refresh button to update the list of Smart Contracts within your workspace."
			}
		]
	},
	"scripts": {
		"vscode:package": "vsce package",
		"vscode:prepublish": "npm run package",
		"vscode:publish": "vsce publish",
		"webpack": "webpack --mode development",
		"webpack-dev": "webpack --mode development --watch",
		"package": "webpack --mode production --devtool hidden-source-map",
		"test-compile": "tsc -p ./",
		"test": "node ./out/test/runTest.js",
		"unit-tests": "mocha",
		"lint": "eslint src --ext ts"
	},
	"devDependencies": {
		"@multiversx/sdk-wallet": "4.0.0",
		"@types/chai": "4.2.11",
		"@types/eventsource": "1.1.11",
		"@types/glob": "7.1.3",
		"@types/mocha": "10.0.1",
		"@types/node": "18.15.10",
		"@types/uuid": "9.0.1",
		"@types/vscode": "1.76.0",
		"@typescript-eslint/eslint-plugin": "5.56.0",
		"@typescript-eslint/parser": "5.56.0",
		"@vscode/codicons": "0.0.32",
		"@vscode/webview-ui-toolkit": "1.2.2",
		"axios": "1.6.1",
		"chai": "4.3.10",
		"copy-webpack-plugin": "11.0.0",
		"eslint": "8.36.0",
		"eventsource": "2.0.2",
		"glob": "8.1.0",
		"html-loader": "4.2.0",
		"mocha": "10.2.0",
		"semver": "7.5.2",
		"ts-loader": "9.4.2",
		"ts-node": "10.9.1",
		"typescript": "4.9.5",
		"uuid": "8.3.2",
		"vsce": "2.15.0",
		"webpack": "5.76.3",
		"webpack-cli": "5.0.1"
	},
	"extensionDependencies": []
}
